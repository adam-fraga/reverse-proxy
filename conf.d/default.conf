# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;

    server_name ad-mindset.com xbvr.ad-mindset.com auth.ad-mindset.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
    	return 301 https://$host$request_uri;
    }
}

# AD_MINDSET HOMER DASHBOARD

server {
    listen 443 ssl http2;
    server_name ad-mindset.com;

    # Let's encrypt certification more info to set them on the readme
    ssl_certificate /etc/letsencrypt/live/ad-mindset.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ad-mindset.com/privkey.pem;

    # Additionnal configuration for nginx (SSL & Proxy)
    include /etc/nginx/includes/ssl.conf;
    include /etc/nginx/includes/proxy.conf;
    include /etc/nginx/config.d/authelia-location.conf;
    
    # Variable contain container for proxy pass directive

    location / {
        include /etc/nginx/config.d/authelia-authrequest.conf;
        proxy_pass http://homer:8080;
    }

	# Turn value to "off" for access_log in production environment
	# access_log off
	access_log /var/log/nginx/homer.ad-mindset-access.log;
	error_log /var/log/nginx/homer.ad-mindset-error.log error;
}

# XBVR
server {
    listen 443 ssl http2;
    server_name xbvr.ad-mindset.com;

    # Let's encrypt certification more info to set them on the readme
    ssl_certificate /etc/letsencrypt/live/xbvr.ad-mindset.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xbvr.ad-mindset.com/privkey.pem;

    # Additionnal configuration for nginx (SSL & Proxy)
    include /etc/nginx/includes/ssl.conf;
    include /etc/nginx/includes/proxy.conf;

    # Authelia configuration end-point
    include /etc/nginx/config.d/authelia-location.conf;

    # Check Readme to see how to gen a dhparam with openssl
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirect to an other nginx reverse proxy container listening on port 80;
    location / {
        # Bind location block with Authelia
        include /etc/nginx/config.d/authelia-authrequest.conf;

        # Remember that the port right after the container name does not need to be set to specify to
        # nginx main reverse proxy which port it should redirect.
        # Docker can access it if you define a common network.
        proxy_pass http://xbvr:9999;
    }

    location /ws/ {
        # Web socket configuration
        proxy_pass http://xbvr:9998;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

        # Turn value to "off" for access_log in production environment
	# access_log off
	access_log /var/log/nginx/xbvr.ad-mindset-access.log;
	error_log /var/log/nginx/xbvr.ad-mindset-error.log error;
}


 #AUTHELIA
 server {
     listen 443 ssl http2;
     server_name auth.*;
 
     # Let's encrypt certification more info to set them on the readme
     ssl_certificate /etc/letsencrypt/live/auth.ad-mindset.com/fullchain.pem;
     ssl_certificate_key /etc/letsencrypt/live/auth.ad-mindset.com/privkey.pem;
 
     # Additionnal configuration for nginx (SSL & Proxy)
     include /etc/nginx/includes/ssl.conf;
     include /etc/nginx/includes/proxy.conf;
     
     # Variable contain container for proxy pass directive
 
     location / {
         proxy_pass http://authelia:9091;
     }
 
     location /api/verify {
         proxy_pass http://authelia:9091;
     }
 	# Turn value to "off" for access_log in production environment
 	# access_log off
 	access_log /var/log/nginx/authelia.ad-mindset-access.log;
 	error_log /var/log/nginx/authelia.ad-mindset-error.log error;
 }

# XBVR
server {
    listen 443 ssl http2;
    server_name xbvr.ad-mindset.com;

    # Let's encrypt certification more info to set them on the readme
    ssl_certificate /etc/letsencrypt/live/xbvr.ad-mindset.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xbvr.ad-mindset.com/privkey.pem;

    # Additionnal configuration for nginx (SSL & Proxy)
    include /etc/nginx/includes/ssl.conf;
    include /etc/nginx/includes/proxy.conf;

    # Authelia configuration end-point
     include /etc/nginx/config.d/authelia-location.conf;

    # Check Readme to see how to gen a dhparam with openssl
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirect to an other nginx reverse proxy container listening on port 80;
    location / {
        # Bind location block with Authelia
        include /etc/nginx/config.d/authelia-authrequest.conf;

        # Remember that the port right after the container name does not need to be set to specify to
        # nginx main reverse proxy which port it should redirect.
        # Docker can access it if you define a common network.
        proxy_pass http://xbvr:9999;
    }

    location /ws/ {
        # Web socket configuration
        proxy_pass http://xbvr:9998;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

        # Turn value to "off" for access_log in production environment
	# access_log off
	access_log /var/log/nginx/xbvr.ad-mindset-access.log;
	error_log /var/log/nginx/xbvr.ad-mindset-error.log error;
}

